
dict_keys(['data_identifier', 'preprocessor_name', 'batch_size', 'patch_size', 'median_image_size_in_voxels', 'spacing', 'normalization_schemes', 'use_mask_for_norm', 'resampling_fn_data', 'resampling_fn_seg', 'resampling_fn_data_kwargs', 'resampling_fn_seg_kwargs', 'resampling_fn_probabilities', 'resampling_fn_probabilities_kwargs', 'architecture', 'batch_dice'])
Traceback (most recent call last):
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/run/run_training.py", line 306, in <module>
    run_training_entry()
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/run/run_training.py", line 300, in run_training_entry
    run_training(args.dataset_name_or_id, args.configuration, args.fold, args.tr, args.p, args.pretrained_weights,
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/run/run_training.py", line 231, in run_training
    nnunet_trainer.run_training(dataset_id=dataset_id)
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/training/nnUNetTrainer/brainTrainer.py", line 121, in run_training
    self.on_train_start()
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/training/nnUNetTrainer/nnUNetTrainer.py", line 902, in on_train_start
    self.initialize()
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/training/nnUNetTrainer/brainTrainer.py", line 583, in initialize
    self.network = self.build_network_architecture(self.plans_manager, self.dataset_json,
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/training/nnUNetTrainer/brainTrainer.py", line 88, in build_network_architecture
    return get_network_from_plans(plans_manager, dataset_json, configuration_manager,
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/utilities/get_network_from_plans.py", line 28, in get_network_from_plans
    dim = len(configuration_manager.configuration['architecture'].arch_kwargs.conv_kernel_sizes[0])

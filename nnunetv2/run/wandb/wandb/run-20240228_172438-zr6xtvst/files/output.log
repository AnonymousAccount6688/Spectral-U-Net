<class 'nnunetv2.training.network.model.waveunet.brain_wave_unet.WaveUNet'>
============<class 'nnunetv2.training.network.model.waveunet.brain_wave_unet.WaveUNet'>=============
lr: 0.01
ds wegihts: [0.50793651 0.25396825 0.12698413 0.06349206 0.03174603 0.01587302]
This is the configuration used by this training:
Configuration name: 2d
 {'data_identifier': 'nnUNetPlans_2d', 'preprocessor_name': 'DefaultPreprocessor', 'batch_size': 105, 'patch_size': [192, 160], 'median_image_size_in_voxels': [169.0, 138.0], 'spacing': [1.0, 1.0], 'normalization_schemes': ['ZScoreNormalization', 'ZScoreNormalization', 'ZScoreNormalization', 'ZScoreNormalization'], 'use_mask_for_norm': [True, True, True, True], 'UNet_class_name': 'PlainConvUNet', 'UNet_base_num_features': 32, 'n_conv_per_stage_encoder': [2, 2, 2, 2, 2, 2], 'n_conv_per_stage_decoder': [2, 2, 2, 2, 2], 'num_pool_per_axis': [5, 5], 'pool_op_kernel_sizes': [[1, 1], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]], 'conv_kernel_sizes': [[3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3]], 'unet_max_num_features': 512, 'resampling_fn_data': 'resample_data_or_seg_to_shape', 'resampling_fn_seg': 'resample_data_or_seg_to_shape', 'resampling_fn_data_kwargs': {'is_seg': False, 'order': 3, 'order_z': 0, 'force_separate_z': None}, 'resampling_fn_seg_kwargs': {'is_seg': True, 'order': 1, 'order_z': 0, 'force_separate_z': None}, 'resampling_fn_probabilities': 'resample_data_or_seg_to_shape', 'resampling_fn_probabilities_kwargs': {'is_seg': False, 'order': 1, 'order_z': 0, 'force_separate_z': None}, 'batch_dice': True}
These are the global plan.json settings:
 {'dataset_name': 'Dataset201_BrainTumour', 'plans_name': 'nnUNetPlans', 'original_median_spacing_after_transp': [1.0, 1.0, 1.0], 'original_median_shape_after_transp': [138, 169, 138], 'image_reader_writer': 'SimpleITKIO', 'transpose_forward': [0, 1, 2], 'transpose_backward': [0, 1, 2], 'experiment_planner_used': 'ExperimentPlanner', 'label_manager': 'LabelManager', 'foreground_intensity_properties_per_channel': {'0': {'max': 5721.0, 'mean': 728.8666381835938, 'median': 779.0, 'min': 0.0, 'percentile_00_5': 104.0, 'percentile_99_5': 1733.0, 'std': 354.5618896484375}, '1': {'max': 8761.0, 'mean': 621.560791015625, 'median': 644.0, 'min': 0.0, 'percentile_00_5': 56.0, 'percentile_99_5': 2421.0, 'std': 335.946044921875}, '2': {'max': 9012.0, 'mean': 662.5552368164062, 'median': 639.0, 'min': 0.0, 'percentile_00_5': 44.0, 'percentile_99_5': 2963.0, 'std': 420.2735595703125}, '3': {'max': 3346.0, 'mean': 664.2885131835938, 'median': 647.0, 'min': 0.0, 'percentile_00_5': 103.0, 'percentile_99_5': 1997.0, 'std': 318.48980712890625}}}
2024-02-28 17:24:42.145091: unpacking dataset...
2024-02-28 17:24:47.848515: unpacking done...
2024-02-28 17:24:47.850737: do_dummy_2d_data_aug: False
2024-02-28 17:24:47.855070: Using splits from existing split file: /scratch365/ypeng4/data/preprocessed_data/Dataset201_BrainTumour/splits_final.json
2024-02-28 17:24:47.856601: The split file contains 5 splits.
2024-02-28 17:24:47.857593: Desired fold for training: 0
2024-02-28 17:24:47.858359: This split has 387 training and 97 validation cases.
==================batch size: 2===================
2024-02-28 17:24:47.920064: Unable to plot network architecture:
2024-02-28 17:24:47.921161: No module named 'hiddenlayer'
lr: 0.01
2024-02-28 17:24:47.967255:
2024-02-28 17:24:47.967869: Epoch 0
2024-02-28 17:24:47.968483: start training, 250
2024-02-28 17:24:47.969058: learning rate: 0.01
using pin_memory on device 0
2024-02-28 17:24:50.876240: finished training
2024-02-28 17:24:51.106591: Using splits from existing split file: /scratch365/ypeng4/data/preprocessed_data/Dataset201_BrainTumour/splits_final.json
2024-02-28 17:24:51.109254: The split file contains 5 splits.
2024-02-28 17:24:51.110281: Desired fold for training: 0
2024-02-28 17:24:51.111292: This split has 387 training and 97 validation cases.
2024-02-28 17:24:57.693404: predicting BRATS_010 took 6.58 s
2024-02-28 17:25:03.530642: predicting BRATS_011 took 5.06 s
2024-02-28 17:25:09.467789: predicting BRATS_012 took 5.24 s
2024-02-28 17:25:15.744651: predicting BRATS_018 took 5.53 s
2024-02-28 17:25:21.805772: predicting BRATS_020 took 5.35 s
2024-02-28 17:25:27.998106: predicting BRATS_028 took 5.45 s
2024-02-28 17:25:34.169070: predicting BRATS_029 took 5.40 s
2024-02-28 17:25:40.109648: predicting BRATS_032 took 5.24 s
2024-02-28 17:25:45.987709: predicting BRATS_034 took 5.20 s
2024-02-28 17:25:51.968825: predicting BRATS_041 took 5.30 s
2024-02-28 17:25:57.915133: predicting BRATS_042 took 5.24 s
2024-02-28 17:26:03.925940: predicting BRATS_047 took 5.39 s
2024-02-28 17:26:10.298497: predicting BRATS_049 took 5.74 s
2024-02-28 17:26:16.820450: predicting BRATS_053 took 5.84 s
2024-02-28 17:26:23.212077: predicting BRATS_056 took 5.80 s
2024-02-28 17:26:29.338037: predicting BRATS_057 took 5.52 s
2024-02-28 17:26:35.290563: predicting BRATS_067 took 5.37 s
Traceback (most recent call last):
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/run/run_training.py", line 306, in <module>
    run_training_entry()
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/run/run_training.py", line 300, in run_training_entry
    run_training(args.dataset_name_or_id, args.configuration, args.fold, args.tr, args.p, args.pretrained_weights,
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/run/run_training.py", line 231, in run_training
    nnunet_trainer.run_training(dataset_id=dataset_id)
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/training/nnUNetTrainer/brainTrainer.py", line 158, in run_training
    self.real_validation_brain()
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/training/nnUNetTrainer/brainTrainer.py", line 275, in real_validation_brain
    prediction = predictor.predict_sliding_window_return_logits(data)
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/inference/predict_from_raw_data.py", line 646, in predict_sliding_window_return_logits
    prediction = self._internal_maybe_mirror_and_predict(workon)[0].to(results_device)
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/inference/predict_from_raw_data.py", line 557, in _internal_maybe_mirror_and_predict
    prediction += torch.flip(self.network(torch.flip(x, (2,))), (2,))
  File "/afs/crc.nd.edu/user/y/ypeng4/.conda/envs/python38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/training/network/model/waveunet/brain_wave_unet.py", line 51, in forward
    x3 = self.down2(x2[1])  # 128
  File "/afs/crc.nd.edu/user/y/ypeng4/.conda/envs/python38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/training/network/model/waveunet/layers.py", line 407, in forward
    x = mou(x)
  File "/afs/crc.nd.edu/user/y/ypeng4/.conda/envs/python38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/training/network/model/waveunet/layers.py", line 248, in forward
    out = self.conv2(out)
  File "/afs/crc.nd.edu/user/y/ypeng4/.conda/envs/python38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/afs/crc.nd.edu/user/y/ypeng4/nnUNet/nnunetv2/training/network/model/waveunet/layers.py", line 224, in forward
    out = self.conv(self.act(self.norm(x)))
  File "/afs/crc.nd.edu/user/y/ypeng4/.conda/envs/python38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
